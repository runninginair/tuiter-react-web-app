{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/tylerzhang/2023/spring/webdev/tuiter-react-web-app/src/labs/a7/redux-examples/hello-redux-example-component.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useSelector } from \"react-redux\"; // import useSelector hook  from react-redux\nimport { HomeDemo } from \"../../../screens/profile-demo/home-screen\";\nimport hello from \"./reducers/hello\";\n\n/**     2.4 Create a Hello World Redux component\n * \n * The component uses redux's useSelector hook to extract the message from the reducer.\n * When the component loads, reducers pass their data in the function declared in useSelector.\n * In the code below, the parameter hello in (hello) => { … }, gets the object returned by the\n * reducers, e.g., {message: 'Hello World'}, therefore, (hello) => hello.message returns\n * 'Hello World', and that's the value const message is initialized with.\n * The component goes on to render 'Hello World' in an H1 element.\n */\n\nvar HelloReduxExampleComponent = function HelloReduxExampleComponent() {\n  // const message = useSelector((hello) => hello.message);  // extract 'Hello World' from reducer\n  var message = useSelector(function (state) {\n    return state.hello.message;\n  }); // extract 'Hello World' from reducer\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, message), \"                                  // render \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 71\n    }\n  }, \"Hello World\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/home-demo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \" HomeDemo \"), \" |\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile-demo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \" ProfileDemo \"), \" |\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/counter-demo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \" CounterDemo \"));\n};\nexport default HelloReduxExampleComponent;","map":{"version":3,"names":["React","Link","useSelector","HomeDemo","hello","HelloReduxExampleComponent","message","state"],"sources":["/Users/tylerzhang/2023/spring/webdev/tuiter-react-web-app/src/labs/a7/redux-examples/hello-redux-example-component.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport { useSelector } from \"react-redux\";      // import useSelector hook  from react-redux\nimport { HomeDemo } from \"../../../screens/profile-demo/home-screen\";\nimport hello from \"./reducers/hello\";\n\n/**     2.4 Create a Hello World Redux component\n * \n * The component uses redux's useSelector hook to extract the message from the reducer.\n * When the component loads, reducers pass their data in the function declared in useSelector.\n * In the code below, the parameter hello in (hello) => { … }, gets the object returned by the\n * reducers, e.g., {message: 'Hello World'}, therefore, (hello) => hello.message returns\n * 'Hello World', and that's the value const message is initialized with.\n * The component goes on to render 'Hello World' in an H1 element.\n */\n\nconst HelloReduxExampleComponent = () => {\n    // const message = useSelector((hello) => hello.message);  // extract 'Hello World' from reducer\n    const message = useSelector((state) => state.hello.message);  // extract 'Hello World' from reducer\n\n    return (\n        <div>\n        <h1>{message}</h1>                                  // render <h1>Hello World</h1>\n        \n        <Link to=\"/home-demo\"> HomeDemo </Link> |\n        <Link to=\"/profile-demo\"> ProfileDemo </Link> |\n        <Link to=\"/counter-demo\"> CounterDemo </Link>\n        </div>\n    );\n};\n\nexport default HelloReduxExampleComponent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAM;AAChD,SAASC,QAAQ,QAAQ,2CAA2C;AACpE,OAAOC,KAAK,MAAM,kBAAkB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0B,GAAS;EACrC;EACA,IAAMC,OAAO,GAAGJ,WAAW,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACH,KAAK,CAACE,OAAO;EAAA,EAAC,CAAC,CAAE;;EAE9D,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKA,OAAO,CAAM,gDAA4C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,aAAW,CAAK,eAElF,oBAAC,IAAI;IAAC,EAAE,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,YAAU,CAAO,MACvC,mCAAC,IAAI;IAAC,EAAE,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,eAAa,CAAO,MAC7C,mCAAC,IAAI;IAAC,EAAE,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,eAAa,CAAO,CACvC;AAEd,CAAC;AAED,eAAeD,0BAA0B"},"metadata":{},"sourceType":"module"}