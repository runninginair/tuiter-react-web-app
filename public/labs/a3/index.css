/* 3.1.3 Linking CSS styling documents with the link tag (4pts) */
/* p { background-color: blue;
    color: white;
} */

 /* 3.2.1 Selecting content with ID selectors (3pts) */
p#id-selector-1 {
    background-color: red;
    color: white;
    }
p#id-selector-2 {
    background-color: yellow;
    color: black;
    }

/* 3.2.2 Selecting content with class selectors (3pts) */
.class-selector {
    background-color: yellow;
    color: blue;
    }

/* 3.2.3 Selecting content based on the document structure (4pts) */
/* refers to .selector-3 as a descendant of .selector-1  */
.selector-1 .selector-3 {
    background-color: red;
    color: white;
    }

/* refers to .selector-4 as a direct child of .selector-3 which is a direct child of .selector-2 */
.selector-2 > .selector-3 > .selector-4 {
    background-color: yellow;
    color: blue;
    }


/* 3.3 Styling color (5pts) */

/* 3.3.1 Styling the foreground color (2.5pts) */
.fg-color-black { color: black; }
.fg-color-white { color: white; }
.fg-color-blue { color: #7070ff; }
.fg-color-red { color: #ff7070; }
.fg-color-green { color: green; }

/* 3.3.2 Styling the background color (2.5pts) */
.bg-color-yellow { background-color: #ffff07;}
.bg-color-blue { background-color: #7070ff; }
.bg-color-red { background-color: #ff7070; }
.bg-color-green { background-color: green; }


/* 3.4 Styling the box model (10pts) */

/* 3.4.1 Styling borders (2.5pts) */
.border-fat { border-width: 20px 30px 20px 30px; }
.border-thin { border-width: 4px; }
.border-solid {border-style: solid; }
.border-dashed { border-style: dashed; }
.border-yellow { border-color: #ffff07; }
.border-red { border-color: #ff7070; }
.border-blue { border-color: #7070ff; }

/* 3.4.2 Stying margins and paddings (5pts) */
.padded-top-left {
    padding-top: 50px;
    padding-left: 50px;
    }
.padded-bottom-right {
    padding-bottom: 50px;
    padding-right: 50px;
    }
.padding-fat {
    padding: 50px;
    }

.margin-bottom {
    margin-bottom: 50px;
    }
.margin-right-left {
    margin-left: 50px;
    margin-right: 50px;
    }
.margin-all-around {
    margin: 30px;
    }

/* 3.4.3 Stying corners (2.5pts) */
.rounded-corners-bottom {
    border-bottom-left-radius: 40px;
    border-bottom-right-radius: 40px;
    }
.rounded-corners-all-around {
    border-radius: 50px;
    }
.rounded-corners-inline {
    border-radius: 30px 0px 20px 50px;
    }

/* 3.5 Styling dimensions (3pts) */
.dimension-portrait {
    width: 75px;
    height: 100px;
    }
.dimension-landscape {
    width: 100px;
    height: 75px;
    }
.dimension-square {
    width: 75px;
    height: 75px;
    }


/* 3.6 Styling position (12pts) */

/* 3.6.1 Styling relative position (2pts) */
.pos-relative-nudge-up-right {
    position: relative;
    bottom: 30px;
    left: 30px;
    }
.pos-relative-nudge-down-right {
    position: relative;
    top: 20px;
    left: 20px;
    }
.pos-relative {
    position: relative;
    }

/* 3.6.2 Styling absolute position (2pts) */
.pos-absolute-10-10 {
    position: absolute;
    top: 10px;
    left: 10px;
    }
.pos-absolute-50-50 {
    position: absolute;
    top: 50px;
    left: 50px;
    }
.pos-absolute-120-20 {
    position: absolute;
    top: 20px;
    left: 120px;
    }
 
/* 3.6.3 Styling fixed position (1pt) */
.pos-fixed {
    position: fixed;
    right: 0px;
    bottom: 50%;
    }

/* 3.6.4 Styling z-index (1pt) */
.zindex-bring-to-front {
    z-index: 10;
    }

/* 3.6.5 Floating content (2pts) */
.float-left { float: left; }
.float-right { float: right; height: 100px; }
.float-done { clear: both; }

/* 3.6.6 Laying out content in a grid (4pts) */
.grid-row { clear: both; }
.grid-col-half-page { width: 50%; float: left; }
.grid-col-third-page { width: 33%; float: left; }
.grid-col-two-thirds-page { width: 67%; float: left; }
.grid-col-left-sidebar { width: 20%; float: left; }
.grid-col-main-content { width: 60%; float: left; }
.grid-col-right-sidebar { width: 20%; float: left; }


/* 5 Challenge (50pts required for graduate students) */

.rotate-paragraph {
    width: 250px;
    height: 250px;
    transform: rotate(90deg);
    }

.rotate-list {
    transform: rotate(12deg);
    width: 100px;
    background-color: red;
    color: white;
    }

.rotate-list-items li {
    width: 100px;
    text-align: right;
    }

.rotate-list-items li:nth-child(1) {
    transform: rotate(-10deg);
    background-color: yellow;
    }

.rotate-list-items li:nth-child(2) {
    transform: rotate(2deg);
    background-color: blue;
    color: white;
    }

.rotate-list-items li:nth-child(3) {
    transform: rotate(10deg);
    background-color: red;
    }

.rotate-image {
    transform: rotate(-10deg);
    }
     
/* 5.4 Rotate a table (5pts) */
.rotate-table {
    position: relative;
    left: 50px;
    transform: rotate(15deg); }
.rotate-table tr:nth-child(1) {
    background-color: black;
    color: white; }
.rotate-table tr:nth-child(n+2) {
    background-color: yellow; }
.rotate-table tr:nth-child(n+5) {
    background-color: blue;
    color: white; }
.rotate-table tr:nth-child(n+8) {
    background-color: red; }
.rotate-table tr:nth-child(n+11) {
    background-color: green;
    color: white; }

/* 5.5 Gradients (10pts) */
.gradients-linear {
    background: linear-gradient(yellow, red);
    width: 200px; height: 200px; }
.gradients-linear-2 {
    background: linear-gradient(rgb(225, 64, 172), rgb(6, 7, 6));
    color: aqua;
    width: 240px; height: 240px; }

/* 5.5.1 Radial gradients */
.gradients-radial {
    background: radial-gradient(yellow, green);
    width: 200px; height: 200px; }
.gradients-radial-2 {
    background: radial-gradient(rgb(236, 84, 231), rgb(95, 37, 242));
    color: azure;
    width: 260px; height: 180px; }
    
/* 5.5.2 Positioning radial gradients */
.gradients-positioned {
    background: radial-gradient(at top left, blue, red);
    width: 200px;
    height: 200px;
    color: white; }

.gradients-positioned-2 {
    background:
        radial-gradient(
        at top right, yellow, green);
    width: 260px;
    height: 260px;
    color: navy;
    font-size: 1.2em;
    font-family:Georgia, 'Times New Roman', Times, serif;
    }

/* 5.6 Animations (5pts) */

/* 5.6.1 Key frame animations */
    
.animation-keyframes {
    position: relative;
    top: 0px;
    animation-duration: 7s;
    animation-name: slidein;
    width: 200px;
    height: 200px;
    background-color: red;
    color: white;
    }
     
@keyframes slidein {
    from {
        position: relative;
        top: 0px;
        font-size: 100%;
        margin-left: 100%;
        width: 200px;
        height: 200px;
        background-color: yellow;
        color: black;
    } 50% {
        position: relative;
        top: -200px;
        font-size: 300%;
        margin-left: 25%;
        width: 400px;
        height: 400px;
        background-color: blue;
        color: white;
    } to {
        position: relative;
        top: 0px;
        font-size: 100%;
        margin-left: 0%;
        width: 200px;
        height: 200px;
        background-color: red;
        color: white;
        }
    }
    
.animation-keyframes-2 {
    position: relative;
    top: 0px;
    animation-duration: 12s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-name: slidein-2;
    width: 220px;
    height: 220px;
    background-color: darkgray;
    color: darkmagenta;
    font-size: 1.1em;
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    }
     
@keyframes slidein-2 {
    from {
        position: relative;
        top: 0px;
        font-size: 100%;
        margin-left: 100%;
        width: 200px;
        height: 200px;
        background-color: orange;
        color: purple;
    } 50% {
        position: relative;
        top: -200px;
        font-size: 300%;
        margin-left: 25%;
        width: 400px;
        height: 400px;
        background-color: blue;
        color: red;
    } to {
        position: relative;
        top: 0px;
        font-size: 100%;
        margin-left: 0%;
        width: 200px;
        height: 200px;
        background-color: purple;
        color: yellow;
    }
}


/* 5.7 Flex (10pts) */

/* Flex is a set of styles that allows you to quickly layout a Web Page. 
Let's first define a simple set of block elements as shown below. */
.flex-container-0 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    }
.flex-box {
    border: 5px gray solid;
    margin: 10px;
    padding: 10px;
    }
.flex-box-1 {
    background-color: yellow;
    }
.flex-box-2 {
    background-color: blue;
    color: white;
    }
.flex-box-3 {
    background-color: red;
    color: white;
    }
  
/* 5.7.1 Aligning flex elements horizontally */
.flex-container-1 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
} 
.flex-container-2 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: center;
}
.flex-container-3 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: end;
}
.flex-container-4 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-around;
}
.flex-container-5 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-between;
 }

 /* 5.7.2 Aligning flex elements vertically */
 .flex-container-6 {
   border-width: 5px;
   border-color: black;
   border-style: solid;
   display: flex;
   justify-content: space-evenly;
   align-items: flex-start;
}
.flex-container-7 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}
.flex-container-8 {
    border-width: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
    justify-content: space-evenly;
    /*align-items: center;*/
}
.flex-container-8 > .flex-box {
    flex-basis: 100%;
}
.flex-container-19 {
    border-width: 5px;
    border-color: red;
    border-style:dashed;
    display:-webkit-inline-flex;
    justify-content: space-evenly;
    align-items:flex-end;
}


/* 5.8 Media queries (5pts) */

@media (min-width: 0px)
   and (max-width: 600px) {
   /* body {
       background-color: yellow;
   } */
   .media-query {
       background-color: red;
       color: white;
   }
}

@media (min-width: 600px)
   and (max-width: 1200px) {
   /* body {
       background-color: blue;
       color: white;
   } */
   .media-query {
       background-color: yellow;
       color: black;
   }
}

@media (min-width: 1200px)
   and (max-width: 1800px) {
  /* body {
    background-color: red;
    color: white;
  } */
  .media-query {
    background-color: blue;
    color: white;
  }
}

/* Create examples of your own that define 3 different media rules for similar screen sizes. 
Define a couple of elements, e.g., heading, paragraph, divs, and change their style as the
user resizes the screen */

@media (min-width: 0px)
   and (max-width: 500px) {
   /* body {
       background-color: pink;
   } */
   .media-query-2 {
       background-color: green;
       color: yellow;
   }
}

@media (min-width: 500px)
   and (max-width: 1000px) {
   /* body {
       background-color: navy;
       color: lightgreen;
   } */
   .media-query-2 {
       background-color: blue;
       color: yellow;
       font-size: 1.25em;
   }
}

@media (min-width: 1000px)
   and (max-width: 1500px) {
  /* body {
    background-color: black;
    color: whitesmoke;
  } */
  .media-query-2 {
    background-color: pinkß;
    color: red;
    font-size: 1.5em;
  }
}