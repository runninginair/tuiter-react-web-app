{"ast":null,"code":"import _objectSpread from \"/Users/tylerzhang/2023/spring/webdev/tuiter-react-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport tuits from './tuits.json';\nvar currentUser = {\n  // create an object that represents the currently\n  \"userName\": \"NASA\",\n  // logged in user which contains profile information\n  \"handle\": \"@nasa\",\n  // such as username, their avatar logo, and handle.\n  \"image\": \"NASA_400x400.jpeg\" // Later this will come from users login in.\n};\n\nvar templateTuit = _objectSpread({}, currentUser, {\n  // values and copy over the fields userName, handle and\n  \"topic\": \"Space\",\n  // image from the currentUser\n  \"time\": \"2h\",\n  \"liked\": false,\n  \"replies\": 0,\n  \"retuits\": 0,\n  \"likes\": 0\n});\nvar tuitsSlice = createSlice({\n  name: 'tuits',\n  initialState: tuits,\n  reducers: {\n    // add createTuit reducer function which appends\n    createTuit: function createTuit(state, action) {\n      // the new tuit in the payload at the beginning of the\n      state.unshift(_objectSpread({}, action.payload, templateTuit, {\n        // the unique identifier with a timestamp\n        _id: new Date().getTime()\n      }));\n    },\n    deleteTuit: function deleteTuit(state, action) {\n      var index = state.findIndex(function (tuits) {\n        return tuits._id === action.payload;\n      });\n      state.splice(index, 1);\n    }\n  }\n});\nvar _tuitsSlice$actions = tuitsSlice.actions,\n  createTuit = _tuitsSlice$actions.createTuit,\n  deleteTuit = _tuitsSlice$actions.deleteTuit; // export reducer function\nexport { createTuit, deleteTuit };\nexport default tuitsSlice.reducer;","map":{"version":3,"names":["createSlice","tuits","currentUser","templateTuit","tuitsSlice","name","initialState","reducers","createTuit","state","action","unshift","payload","_id","Date","getTime","deleteTuit","index","findIndex","splice","actions","reducer"],"sources":["/Users/tylerzhang/2023/spring/webdev/tuiter-react-web-app/src/tuiter/tuits/tuits-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport tuits from './tuits.json';\n\nconst currentUser = {                           // create an object that represents the currently\n    \"userName\": \"NASA\",                         // logged in user which contains profile information\n    \"handle\": \"@nasa\",                          // such as username, their avatar logo, and handle.\n    \"image\": \"NASA_400x400.jpeg\",               // Later this will come from users login in.\n};\nconst templateTuit = {                          // create a template tuit object with some default\n    ...currentUser,                             // values and copy over the fields userName, handle and\n    \"topic\": \"Space\",                           // image from the currentUser\n    \"time\": \"2h\",\n    \"liked\": false,\n    \"replies\": 0,\n    \"retuits\": 0,\n    \"likes\": 0,\n}\n\nconst tuitsSlice = createSlice(\n    {\n        name: 'tuits',\n        initialState: tuits,\n        reducers: {                                 // add createTuit reducer function which appends\n            createTuit(state, action) {             // the new tuit in the payload at the beginning of the\n                state.unshift({                     // array of tuits contained in the state. Also copy\n                    ...action.payload,              // all fields from templateTuit and initialize\n                    ...templateTuit,                // the unique identifier with a timestamp\n                    _id: (new Date()).getTime(),\n                })\n            },\n            deleteTuit(state, action) {\n                const index = state\n                    .findIndex(tuits =>\n                        tuits._id === action.payload);\n                state.splice(index, 1);\n            }\n        }\n    }\n);\n\nexport const { createTuit, deleteTuit } = tuitsSlice.actions;     // export reducer function\nexport default tuitsSlice.reducer;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,cAAc;AAEhC,IAAMC,WAAW,GAAG;EAA4B;EAC5C,UAAU,EAAE,MAAM;EAA0B;EAC5C,QAAQ,EAAE,OAAO;EAA2B;EAC5C,OAAO,EAAE,mBAAmB,CAAgB;AAChD,CAAC;;AACD,IAAMC,YAAY,qBACXD,WAAW;EAA8B;EAC5C,OAAO,EAAE,OAAO;EAA4B;EAC5C,MAAM,EAAE,IAAI;EACZ,OAAO,EAAE,KAAK;EACd,SAAS,EAAE,CAAC;EACZ,SAAS,EAAE,CAAC;EACZ,OAAO,EAAE;AAAC,EACb;AAED,IAAME,UAAU,GAAGJ,WAAW,CAC1B;EACIK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEL,KAAK;EACnBM,QAAQ,EAAE;IAAkC;IACxCC,UAAU,sBAACC,KAAK,EAAEC,MAAM,EAAE;MAAc;MACpCD,KAAK,CAACE,OAAO,mBACND,MAAM,CAACE,OAAO,EACdT,YAAY;QAAiB;QAChCU,GAAG,EAAG,IAAIC,IAAI,EAAE,CAAEC,OAAO;MAAE,GAC7B;IACN,CAAC;IACDC,UAAU,sBAACP,KAAK,EAAEC,MAAM,EAAE;MACtB,IAAMO,KAAK,GAAGR,KAAK,CACdS,SAAS,CAAC,UAAAjB,KAAK;QAAA,OACZA,KAAK,CAACY,GAAG,KAAKH,MAAM,CAACE,OAAO;MAAA,EAAC;MACrCH,KAAK,CAACU,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1B;EACJ;AACJ,CAAC,CACJ;AAAC,0BAEwCb,UAAU,CAACgB,OAAO;EAA7CZ,UAAU,uBAAVA,UAAU;EAAEQ,UAAU,uBAAVA,UAAU,EAA6B;AAAA;AAClE,eAAeZ,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}