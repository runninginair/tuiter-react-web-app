{"ast":null,"code":"import _slicedToArray from \"/Users/tylerzhang/2023/spring/webdev/tuiter-react-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { useState } from \"react\";\n// import tuits from '../data/tuits.json';\n\n// const currentUser = {                           // create an object that represents the currently\n//     \"userName\": \"JavaScript\",                         // logged in user which contains profile information\n//     \"handle\": \"@js\",                          // such as username, their avatar logo, and handle.\n//     \"image\": \"JavaScript_logo.png\",               // Later this will come from users login in.\n// };\n// const templateTuit = {                          // create a template tuit object with some default\n//     ...currentUser,                             // values and copy over the fields userName, handle and\n//     \"topic\": \"Programing\",                           // image from the currentUser\n//     \"time\": \"1min\",\n//     \"liked\": false,\n//     \"replies\": 0,\n//     \"retuits\": 0,\n//     \"likes\": 0,\n// }\n\nvar defaultProfile = {\n  firstName: 'Jose',\n  lastName: 'Annunziato',\n  handle: '@jannunzi',\n  profilePicture: 'jose.png',\n  bannerPicture: 'polyglot.png',\n  bio: 'Faculty, Software Engineer, AI, Space, and renewable enthusiast. Retuits and likes are not endorsements.',\n  website: 'youtube.com/webdevtv',\n  location: 'Boston, MA',\n  dateOfBirth: '7/7/1968',\n  dateJoined: '4/2009',\n  followingCount: 340,\n  followersCount: 223\n};\nvar _useState = useState(profile),\n  _useState2 = _slicedToArray(_useState, 2),\n  profile = _useState2[0],\n  setProfile = _useState2[1];\nvar profileSlice = createSlice({\n  name: 'profile',\n  initialState: profile,\n  reducers: {// add createTuit reducer function which appends\n    // createTuit(state, action) {             // the new tuit in the payload at the beginning of the\n    //     state.unshift({                     // array of tuits contained in the state. Also copy\n    //         ...action.payload,              // all fields from templateTuit and initialize\n    //         ...templateTuit,                // the unique identifier with a timestamp\n    //         _id: (new Date()).getTime(),\n    //     })\n    // },\n\n    // deleteTuit(state, action) {\n    //     const index = state\n    //         .findIndex(tuit =>\n    //             tuit._id === action.payload);\n    //     state.splice(index, 1);\n    // }\n  }\n});\n\n// export const { createTuit, deleteTuit, likedToggle } = tuitsSlice.actions;     // export reducer function\nexport default profileSlice.reducer;","map":{"version":3,"names":["createSlice","useState","defaultProfile","firstName","lastName","handle","profilePicture","bannerPicture","bio","website","location","dateOfBirth","dateJoined","followingCount","followersCount","profile","setProfile","profileSlice","name","initialState","reducers","reducer"],"sources":["/Users/tylerzhang/2023/spring/webdev/tuiter-react-web-app/src/tuiter/profile/profile-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { useState } from \"react\";\n// import tuits from '../data/tuits.json';\n\n// const currentUser = {                           // create an object that represents the currently\n//     \"userName\": \"JavaScript\",                         // logged in user which contains profile information\n//     \"handle\": \"@js\",                          // such as username, their avatar logo, and handle.\n//     \"image\": \"JavaScript_logo.png\",               // Later this will come from users login in.\n// };\n// const templateTuit = {                          // create a template tuit object with some default\n//     ...currentUser,                             // values and copy over the fields userName, handle and\n//     \"topic\": \"Programing\",                           // image from the currentUser\n//     \"time\": \"1min\",\n//     \"liked\": false,\n//     \"replies\": 0,\n//     \"retuits\": 0,\n//     \"likes\": 0,\n// }\n\nconst defaultProfile = {\n    firstName: 'Jose', \n    lastName: 'Annunziato', \n    handle: '@jannunzi',\n    profilePicture: 'jose.png', \n    bannerPicture: 'polyglot.png',\n    bio: 'Faculty, Software Engineer, AI, Space, and renewable enthusiast. Retuits and likes are not endorsements.',\n    website: 'youtube.com/webdevtv',\n    location: 'Boston, MA',\n    dateOfBirth: '7/7/1968',\n    dateJoined: '4/2009',\n    followingCount: 340,\n    followersCount: 223\n}\n\nconst [profile, setProfile] = useState(profile);\n\n\nconst profileSlice = createSlice(\n    {\n        name: 'profile',\n        initialState: profile,\n\n        reducers: {                                 // add createTuit reducer function which appends\n            // createTuit(state, action) {             // the new tuit in the payload at the beginning of the\n            //     state.unshift({                     // array of tuits contained in the state. Also copy\n            //         ...action.payload,              // all fields from templateTuit and initialize\n            //         ...templateTuit,                // the unique identifier with a timestamp\n            //         _id: (new Date()).getTime(),\n            //     })\n            // },\n\n            // deleteTuit(state, action) {\n            //     const index = state\n            //         .findIndex(tuit =>\n            //             tuit._id === action.payload);\n            //     state.splice(index, 1);\n            // }\n\n        }\n    }\n);\n\n// export const { createTuit, deleteTuit, likedToggle } = tuitsSlice.actions;     // export reducer function\nexport default profileSlice.reducer;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAG;EACnBC,SAAS,EAAE,MAAM;EACjBC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,WAAW;EACnBC,cAAc,EAAE,UAAU;EAC1BC,aAAa,EAAE,cAAc;EAC7BC,GAAG,EAAE,0GAA0G;EAC/GC,OAAO,EAAE,sBAAsB;EAC/BC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,UAAU;EACvBC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE,GAAG;EACnBC,cAAc,EAAE;AACpB,CAAC;AAAA,gBAE6Bb,QAAQ,CAACc,OAAO,CAAC;EAAA;EAAxCA,OAAO;EAAEC,UAAU;AAG1B,IAAMC,YAAY,GAAGjB,WAAW,CAC5B;EACIkB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEJ,OAAO;EAErBK,QAAQ,EAAE,CAAkC;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EAAA;AAGR,CAAC,CACJ;;AAED;AACA,eAAeH,YAAY,CAACI,OAAO"},"metadata":{},"sourceType":"module"}